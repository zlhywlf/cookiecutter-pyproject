[project]
name = "cookiecutter-pyproject"
readme = "README.md"
requires-python = ">=3.7"
description = "The python project template based on cookiecutter."
authors = [
  { name = "zlhywlf", email = "tommietanghao@zlhywlf.onmicrosoft.com" },
]
classifiers = [
  "Programming Language :: Python :: 3.7",
]

[project.optional-dependencies]
dev = [
  "cookiecutter~=2.6.0",
  "pytest~=7.4.0",
  "faker~=18.13.0",
  "pre-commit~=2.21.0",
  "pydantic~=2.5.0",
  "ruff~=0.9.0",
  "mypy~=1.4.0",
]

[tool.ruff]
line-length = 120
fix = true
preview = true
exclude = ["*cookiecutter.project_name*"]

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
select = [
  "A", # flake8-builtins
  "AIR", # Airflow
  "ANN", # flake8-annotations
  "ARG", # flake8-unused-arguments
  "ASYNC", # flake8-async
  "B", # flake8-bugbear
  "BLE", # flake8-blind-except
  "C4", # flake8-comprehensions
  "C90", # mccabe
  "COM", # flake8-commas
  "CPY", # flake8-copyright
  "D", # pydocstyle
  "DJ", # flake8-django
  "DOC", # pydoclint
  "DTZ", # flake8-datetimez
  "E", # pycodestyle Error
  "EM", # flake8-errmsg
  "ERA", # eradicate
  "EXE", # flake8-executable
  "F", # Pyflakes
  "FA", # flake8-future-annotations
  "FAST", # FastAPI
  "FBT", # flake8-boolean-trap
  "FIX", # flake8-fixme
  "FLY", # flynt
  "FURB", # refurb
  "G", # flake8-logging-format
  "I", # isort
  "ICN", # flake8-import-conventions
  "INP", # flake8-no-pep420
  "INT", # flake8-gettext
  "ISC", # flake8-implicit-str-concat
  "LOG", # flake8-logging
  "N", # pep8-naming
  "NPY", # NumPy-specific rules
  "PD", # pandas-vet
  "PERF", # Perflint
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL", # Pylint
  "PT", # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "Q", # flake8-quotes
  "RET", # flake8-return
  "RSE", # flake8-raise
  "RUF", # Ruff-specific rules
  "S", # flake8-bandit
  "SIM", # flake8-simplify
  "SLF", # flake8-self
  "SLOT", # flake8-slots
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TC", # flake8-type-checking
  "TD", # flake8-todos
  "TID", # flake8-tidy-imports
  "TRY", # tryceratops
  "UP", # pyupgrade
  "W", # pycodestyle Warning
  "YTT", # flake8-2020
]
ignore = ["CPY001", "COM812", "D100"]

[tool.ruff.lint.extend-per-file-ignores]
"test_*.py" = ["S101"]
"__init__.py" = ["D104"]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
pythonpath = ["tests", "hooks"]

[tool.mypy]
strict = true
python_version = "3.7"
files = ["tests", "hooks"]

[[tool.mypy.overrides]]
module = ["py", "yaml", "cookiecutter.generate", "cookiecutter.main", "cookiecutter.prompt"]
ignore_missing_imports = true
